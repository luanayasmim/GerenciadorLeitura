@model ChangePasswordModel
@{
    ViewData["Title"] = "Alterar Senha";
}


@if (TempData["MensagemSucesso"] != null)
{
    <!--Mensagem de sucesso-->
    <div class="alert alert-success" role="alert">
        <button type="button" class="btn btn-danger btn-sm" id="close-alert" arial-label="Close">X</button>
        @TempData["MensagemSucesso"]
    </div>
}
@if (TempData["MensagemErro"] != null)
{
    <!--Mensagem de erro-->
    <div class="alert alert-danger" role="alert">
        <button type="button" class="btn btn-danger btn-sm" id="close-alert" arial-label="Close">X</button>
        @TempData["MensagemErro"]
    </div>
}

<h1>Alterar Senha</h1>
<form asp-controller="ChangePassword" asp-action="Change" method="post">

    <div class="form-group">
        <label for="CurrentPassword" class="form-label">Senha Atual:</label>
        <!--O asp-for define onde o valor informado será atribuido-->
        <input asp-for="CurrentPassword" type="password" class="form-control">
        @Html.ValidationMessageFor(x => x.CurrentPassword)
    </div>

    <div class="form-group">
        <label for="NewPassword" class="form-label">Nova Senha:</label>
        <input asp-for="NewPassword" type="password" class="form-control">
        @Html.ValidationMessageFor(x => x.NewPassword)
    </div>

    <div class="form-group">
        <label for="ConfirmPassword" class="form-label">Confirme a Nova Senha:</label>
        <input asp-for="ConfirmPassword" type="password" class="form-control">
        @Html.ValidationMessageFor(x => x.ConfirmPassword)
    </div>

    <br />
    <button type="submit" class="btn btn-success btn-block" asp-controller="ChangePassword" asp-action="Change">Salvar</button>
    <a role="button" class="btn btn-dark btn-block" asp-controller="Home" asp-action="Index">Voltar</a>

</form>